index.js

let state = {
  users: ['Dmitry', 'Alex']
};

это локальная функция addUser в index.js
let addUser = (userName) => {
  state.users.push(userName);
};

App.js
Users.js

это локальная функция addUser в users.js
let addUser = () => {
  // logic here
};

<button onClick={addUser}>Add post</button>

В массиве объекты должны быть однообразными.
Метод push() добавляет в конец массива новый элемент.

Если надо экспортировать несколько функций из файла, тогда надо экспортировать без ключевого слова "default".
В таком случае надо поставить ключевое слово "export" перед объявлением переменной:
export let addPost = (postMessage) => {
  ...
};
Затем, когда мы импортируем эту функцию в другом файле, мы должны указать имя функции в фигурных скобках:
import { addPost } from "./redux/state";

addPost('SamuraiJS.COM');

Таким образом, в BLL бизнес-функция addUser будет менять бизнес-объект state.
state стоит воспринимать как базу данных.
debugger;
Наша задача - перерисовывать <App/>, когда происходят изменения в state.
В UI что-то изменилось (благодаря действиям пользователя) - отправляем данные в state. В state данные изменились - перерисовываем UI.
