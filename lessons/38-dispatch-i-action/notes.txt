dispatch - отправлять, посылать, высылать; отправка, отправление, отсылка
dispatch - отправлять

интерфейс (API) - это что-то, что позволяет нам взаимодействовать с чем-то.
Вместо всех методов (addPost, updateNewPostText и подобных), меняющих state, мы будем использовать метод dispatch().
"Что бы вы не хотели изменить внутри state, используйте dispatch()."
В dispatch() передается action. action - это объект. Мы отправляем в storeBeforeRealRedux какое-то действие (объект). Мы отправляем действие, которое должно сообщить, что мы сделаем.
Действие - это объект, который описывает, какое действие совершить. У этого объекта обязательно должно быть свойство type. В его значении будет название действия, писать будем в uppercase, вместо пробела дефис.
Внешнему миру мы даем 1 dispatch().
action - объект, который мы отправляем.
С помощью объекта props мы передаем данные в компонент.
if else and else if
https://www.w3schools.com/js/js_if_else.asp

В компонент приходят данные (свойства) и callback functions (методы).
Презентационный, тупой компонент без состояния.
На случай дебаггинга - вставляем debugger в начало тела функции, чтобы проверить, попадаем ли мы вообще в эту функцию. Идем с конца (state).
Валидация входящих props.
Если в textarea в value приходит значение undefined, то textarea не блокируется, а действует, как хочет.
Введение дополнительной переменной.
Выделяем объект, хотим создать для него переменную: Ctrl+Alt+V
Далее выбираем тип переменной, пишем имя и жмем Enter.
Если мы хотим изменить state из внешнего мира, мы используем dispatch(). Мы отправляем одно действие (action).

